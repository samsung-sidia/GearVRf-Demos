apply plugin: 'com.android.application'

System.setProperty("appName", "gvr-arpet")

if(file("../../common.gradle").exists()) {
    apply from: '../../common.gradle'
}
else if(file("../../../../GearVRf-Demos/common.gradle").exists()) {
    apply from: '../../../../GearVRf-Demos/common.gradle'
}

android {
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // no auto generation of Android.mk
        jniLibs.srcDir 'libs' // pre-compiled libraries
    }
}

dependencies {
    // ARCore library
    implementation "com.google.ar:core:1.2.0"
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'org.greenrobot:eventbus:3.1.1'

    debugImplementation(name: 'MixedReality-debug', ext: 'aar')
    releaseImplementation(name: 'MixedReality-release', ext: 'aar')

    debugImplementation(name: 'gvrf-physics-debug', ext: 'aar')
    releaseImplementation(name: 'gvrf-physics-release', ext: 'aar')

//    if(project.hasProperty("useLocalDependencies") && project.useLocalDependencies) {
//        if (findProject(':gvrf-physics')) {
//            compile project(':gvrf-physics')
//            compile project(':MixedReality')
//        } else {
//            debugCompile(name: 'MixedReality-debug', ext: 'aar')
//            releaseCompile(name: 'MixedReality-release', ext: 'aar')
//
//            debugImplementation(name: 'gvrf-physics-debug', ext: 'aar')
//            releaseImplementation(name: 'gvrf-physics-release', ext: 'aar')
//        }
//    } else {
//        implementation "org.gearvrf:gvrf-physics:$gearvrfVersion"
//        implementation "org.gearvrf:MixedReality:$gearvrfVersion"
//    }

}
